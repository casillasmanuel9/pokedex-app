{"version":3,"sources":["types/types.js","helpers/getPokemonsFetch.js","actions/pokedex.js","components/AppBar/useStylesAppbar.js","components/AppBar/AppBarComponent.js","components/PokemonListItem/DialogPokemon.js","components/PokemonListItem/PokemonListItem.js","components/PokemonList/PokemonList.js","components/home/HomePage.js","hooks/useCounter.js","hooks/useForm.js","reducers/pokedexReducer.js","store/store.js","PokedexApp.js","index.js"],"names":["typesPokedex","getPokemonsFetch","offset","a","limit","urlPokemons","fetch","respPokemons","json","results","count","pokemons","map","pokemon","urlPokemon","url","resPokemon","name","height","weight","types","abilities","sprites","Promise","all","setPokemons","type","payload","loadingPokemons","useStylesAppbar","makeStyles","theme","root","flexGrow","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","spacing","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","breakpoints","up","AppBarComponent","handleInputChange","classes","className","AppBar","Toolbar","Typography","variant","InputBase","placeholder","input","onChange","value","inputProps","DialogPokemon","open","handleClose","Dialog","onClose","DialogTitle","style","textTransform","DialogContent","Grid","margin","container","justify","item","xs","md","lg","alt","src","front_default","sm","direction","gutterBottom","ability","key","DialogActions","Button","onClick","PokemonListItem","useState","setOpen","Card","CardActionArea","CardMedia","component","CardContent","noWrap","PokemonList","HomePage","useSelector","state","pokedex","loading","initialState","counter","setCounter","reset","increment","decrement","useCounter","values","setValues","target","useForm","formValues","pokemonsFilter","setPokemonsFilter","dispatch","useDispatch","useEffect","filter","toLowerCase","includes","then","pokemonsResp","Container","maxWidth","disabled","Math","trunc","CircularProgress","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","PokedexApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b42a20c8.chunk.js","sourcesContent":["export const typesPokedex = {\r\n    setPokemon: '[pokedex] setPokemon',\r\n    loadingPokemons: '[pokedex] loadingPokemons'\r\n}","\r\nexport const getPokemonsFetch = async ( offset, limit = 20) => {\r\n  const urlPokemons = `https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`;\r\n  const respPokemons = await fetch( urlPokemons );\r\n\r\n  const { results, count } = await respPokemons.json();\r\n\r\n  const pokemons = results.map( async ( pokemon ) => {\r\n    const urlPokemon = pokemon.url;\r\n    const resPokemon = await fetch( urlPokemon );\r\n\r\n    const { name, height, weight, types, abilities, sprites } = await resPokemon.json();\r\n\r\n    return {\r\n      name,\r\n      height, \r\n      weight, \r\n      types,\r\n      abilities,\r\n      sprites\r\n    }\r\n  });\r\n\r\n  return ({\r\n    count,\r\n    pokemons: await Promise.all( pokemons )\r\n  });\r\n}","\r\nimport { typesPokedex } from '../types/types';\r\nimport { getPokemonsFetch } from '../helpers/getPokemonsFetch'\r\n\r\n/**\r\n * \r\n * @param {number} offset inicio del arreglo paginado \r\n * @param {number} limit limite del arreglo paginado\r\n */\r\nexport const getPokemons = (offset) => {\r\n    return (dispatch) => {\r\n        dispatch( loadingPokemons() );\r\n        getPokemonsFetch(offset).then(pokemonsResp => {\r\n            const { count, pokemons } = pokemonsResp;\r\n            dispatch( setPokemons( count, pokemons) );\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {arreglo de pokemones} pokemons \r\n */\r\nexport const setPokemons = ( count, pokemons ) => ({\r\n    type: typesPokedex.setPokemon,\r\n    payload: {\r\n        count,\r\n        pokemons\r\n    }\r\n});\r\n\r\nconst loadingPokemons = ( ) => ({\r\n    type: typesPokedex.loadingPokemons\r\n});","import { makeStyles, fade } from '@material-ui/core/styles';\r\n\r\nexport const useStylesAppbar = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 16,\r\n        width: '100%',\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '100%'\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));","import React from \"react\";\r\n\r\n// Material UI\r\nimport { AppBar, InputBase, Toolbar, Typography } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\n// useStyles\r\nimport { useStylesAppbar } from \"./useStylesAppbar\";\r\n\r\nexport const AppBarComponent = ({ search, handleInputChange }) => {\r\n  const classes = useStylesAppbar();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"secondary\">\r\n        <Toolbar>\r\n          <Typography variant=\"h4\">Pokedex</Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              name=\"search\"\r\n              onChange={handleInputChange}\r\n              value={search}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, Grid, Button, DialogActions, Typography } from '@material-ui/core';\r\n\r\nexport const DialogPokemon = ({ open, handleClose, pokemon }) => {\r\n\r\n    return (\r\n        <>\r\n            <Dialog onClose={handleClose} open={open}>\r\n                <DialogTitle onClose={handleClose} style={{ textTransform: 'capitalize' }}>\r\n                    {pokemon.name}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid style={{ margin: '0px' }} container spacing={3} alignItems='center' justify='space-evenly'>\r\n                        <Grid item xs={4} md={4} lg={4}>\r\n                            <img alt={pokemon.name}\r\n                                className='animate__animated animate__fadeInLeft animate__slow'\r\n                                src={(pokemon.sprites.front_default) ? pokemon.sprites.front_default : './assets/no_image.png'} />\r\n                        </Grid>\r\n                        <Grid style={{ margin: '0px' }} item xs={7} md={7} lg={7} sm container direction='column' spacing={2}>\r\n                            <Grid item container direction='row' spacing={3}>\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" gutterBottom>\r\n                                        Altura\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                        {pokemon.height} ft\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" gutterBottom>\r\n                                        Peso\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                        {pokemon.weight} lb\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item container direction='row'>\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" gutterBottom>\r\n                                        Habilidades\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" style={{ textTransform: 'capitalize' }}>\r\n                                        {\r\n                                            pokemon.abilities.map(({ ability }) => (\r\n                                                <span key={`${pokemon.name}-${ability.name}`}>\r\n                                                    {`${ability.name} `}\r\n                                                </span>\r\n                                            ))\r\n                                        }\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item container direction='row'>\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" gutterBottom>\r\n                                        Tipo\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" style={{ textTransform: 'capitalize' }}>\r\n                                        {\r\n                                            pokemon.types.map(({ type }) => (\r\n                                                <span key={`${pokemon.name}-${type.name}`}>\r\n                                                    {`${type.name} `}\r\n                                                </span>\r\n                                            ))\r\n                                        }\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { Grid, CardContent, Card, Typography, CardMedia, CardActionArea } from '@material-ui/core';\r\nimport { DialogPokemon } from './DialogPokemon';\r\n\r\nexport const PokemonListItem = ({ pokemon }) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={4} md={2} lg={2} className='animate__animated animate__fadeIn animate__fast'>\r\n                <Card>\r\n                    <CardActionArea onClick={handleOpen}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={pokemon.name}\r\n                            src={(pokemon.sprites.front_default) ? pokemon.sprites.front_default : './assets/no_image.png'}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"subtitle1\" component=\"h2\" noWrap style={{ textTransform: 'capitalize' }}> {pokemon.name} </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n            {\r\n                open === true && <DialogPokemon open={open} handleClose={handleClose} pokemon={pokemon} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { PokemonListItem } from '../PokemonListItem/PokemonListItem';\r\n\r\nexport const PokemonList = ({pokemons}) => {\r\n    return (\r\n        <>\r\n            <Grid container direction='row' justify=\"center\" alignItems=\"center\" spacing={3} >\r\n                {\r\n                    pokemons.map(pokemon => (\r\n                        <PokemonListItem key={pokemon.name} pokemon={pokemon} />\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Actiones\r\nimport { getPokemons } from '../../actions/pokedex';\r\n// Material UI\r\nimport { Container, Grid, CircularProgress, Typography, Button } from '@material-ui/core';\r\n// Componente\r\nimport { AppBarComponent } from '../AppBar/AppBarComponent';\r\nimport { PokemonList } from '../PokemonList/PokemonList';\r\n// Hooks\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useCounter } from '../../hooks/useCounter';\r\n\r\nexport const HomePage = () => {\r\n\r\n    const { pokemons, loading, count: limit } = useSelector(state => state.pokedex);\r\n    const { counter, increment, decrement } = useCounter(0);\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        search: ''\r\n    });\r\n    const { search } = formValues;\r\n    const [pokemonsFilter, setPokemonsFilter] = useState(pokemons);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (pokemons) setPokemonsFilter(pokemons.filter(pokemon => pokemon.name.toLowerCase().includes(search.toLowerCase())))\r\n    }, [search, pokemons]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPokemons(counter));\r\n    }, [counter, dispatch]);\r\n\r\n\r\n    const handleIncrement = () => {\r\n        increment();\r\n        reset();\r\n    }\r\n\r\n    const handleDecrement = () => {\r\n        decrement();\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBarComponent search={search} handleInputChange={handleInputChange} />\r\n            <div>\r\n                <Container maxWidth=\"md\" className='container'>\r\n                    <Grid container spacing={3} direction='row' justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Button color=\"secondary\" onClick={handleDecrement} disabled={counter === 0 || loading === true}> BACK </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                {(counter > 0) ? counter / 20 + 1 : 1} / {Math.trunc(limit / 20) + 1}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button color=\"secondary\" onClick={handleIncrement} disabled={counter + 20 > limit || loading === true}> NEXT </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {\r\n                        (pokemonsFilter && loading === false) && <PokemonList pokemons={pokemonsFilter} />\r\n                    }\r\n                    {\r\n                        loading === true &&\r\n\r\n                        <Grid container spacing={3} direction='row' justify=\"center\" alignItems=\"center\" >\r\n                            <Grid item>\r\n                                <CircularProgress color='secondary' />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    }\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useCounter = ( initialState = 0 ) => {\r\n    \r\n    const [counter, setCounter] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setCounter( initialState );\r\n    }\r\n\r\n    const increment = () => {\r\n        setCounter( counter + 20 );\r\n    }\r\n\r\n    const decrement = () => {\r\n        if( counter - 20 >= 0 ) setCounter( counter - 20 );\r\n    }\r\n\r\n    return {\r\n        counter,\r\n        increment,\r\n        decrement,\r\n        reset\r\n    };\r\n\r\n}","\r\nimport { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import { typesPokedex } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    pokemons: null,\r\n    count: 0\r\n}\r\n\r\nexport const pokedexReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case typesPokedex.setPokemon:\r\n            return {\r\n                loading: false,\r\n                pokemons: action.payload.pokemons,\r\n                count: action.payload.count\r\n            }\r\n        case typesPokedex.loadingPokemons: \r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                pokemons: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { pokedexReducer } from '../reducers/pokedexReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    pokedex: pokedexReducer\r\n});\r\n\r\nexport const store = createStore( reducers, \r\n    composeEnhancers( \r\n        applyMiddleware( thunk ) \r\n    )\r\n);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { HomePage } from './components/home/HomePage';\r\nimport { store } from './store/store';\r\n\r\nexport const PokedexApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <HomePage />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PokedexApp } from './PokedexApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <PokedexApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}