{"version":3,"sources":["types/types.js","reducers/pokemonsReducer.js","reducers/uiReducer.js","store/store.js","theme.js","helpers/getPokemonsFetch.js","actions/pokemons.js","actions/ui.js","components/AppBar/useStylesAppbar.js","components/AppBar/AppBar.js","components/PokemonList/PokemonListItem.js","components/PokemonList/PokemonDialog.js","components/PokemonList/PokemonList.js","components/Loading/GridLoading.js","components/Controls/Controls.js","pages/Home/HomePage.js","hooks/useCounter.js","hooks/useForm.js","PokedexApp.js","index.js"],"names":["typesPokedex","initialState","pokemons","pokemonActive","count","loading","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","state","action","type","payload","pokemon","ui","store","createStore","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","main","secondary","light","contrastText","getPokemonsFetch","offset","a","limit","urlPokemons","fetch","respPokemons","json","results","map","urlPokemon","url","resPokemon","name","height","weight","types","abilities","sprites","Promise","all","Swal","fire","getPokemons","dispatch","then","pokemonsResp","setPokemons","setCounter","useStylesAppbar","makeStyles","root","flexGrow","search","position","borderRadius","shape","backgroundColor","fade","common","white","marginLeft","width","searchIcon","padding","spacing","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","breakpoints","up","AppBarComponent","handleInputChange","classes","className","AppBar","Toolbar","alt","src","Hidden","smDown","Typography","variant","InputBase","placeholder","input","onChange","value","inputProps","autoComplete","PokemonListItem","handleOpenPokemon","Grid","item","xs","md","lg","Card","CardActionArea","onClick","CardMedia","component","front_default","CardContent","noWrap","style","textTransform","PokemonDialog","open","handleClose","useDispatch","useSelector","useEffect","Dialog","onClose","maxWidth","DialogTitle","DialogContent","margin","container","justify","sm","direction","gutterBottom","ability","Button","key","DialogActions","PokemonList","useState","openDialog","setOpenDialog","setPoekmonActive","GridLoading","CircularProgress","Controls","handleDecrement","handleIncrement","counter","IconButton","aria-label","disabled","Math","trunc","HomePage","reset","increment","factor","decrement","useCounter","values","setValues","target","useForm","formValues","pokemonsFilter","setPokemonsFilter","filter","toLowerCase","includes","trim","Container","PokedexApp","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8c361ba.chunk.js","sourcesContent":["export const typesPokedex = {\r\n    setPokemons: '[pokemons] SetPokemons',\r\n    setCount: '[pokemons] SetCount',\r\n    setActivePokemon: '[pokemons] SetActivePokemon',\r\n    setDesactivatePokemon: '[pokemons] SetDesactivatePokemon',\r\n\r\n    startLoading: '[ui] LoadingPokemons',\r\n    finishLoading: '[ui] FinishLoading'\r\n}","import { typesPokedex } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    pokemons: [], // Array de pokemones\r\n    pokemonActive: null, // Pokemon seleccionado\r\n    count: 0 // Total de pokemones\r\n}\r\n\r\nexport const pokemonsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case typesPokedex.setPokemons:\r\n            return {\r\n                ...state,\r\n                pokemons: [...action.payload.pokemons]\r\n            }\r\n        case typesPokedex.setCount:\r\n            return {\r\n                ...state,\r\n                count: action.payload.count\r\n            }\r\n\r\n        case typesPokedex.setActivePokemon:\r\n            return {\r\n                ...state,\r\n                pokemonActive: action.payload.pokemon\r\n            }\r\n\r\n        case typesPokedex.setDesactivatePokemon:\r\n            return {\r\n                ...state,\r\n                pokemonActive: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { typesPokedex } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case typesPokedex.startLoading: \r\n            return {\r\n                loading: true\r\n            }\r\n        case typesPokedex.finishLoading:\r\n            return {\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { pokemonsReducer } from '../reducers/pokemonsReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    pokemons: pokemonsReducer,\r\n    ui: uiReducer\r\n});\r\n\r\nexport const store = createStore( reducers, \r\n    composeEnhancers( \r\n        applyMiddleware( thunk ) \r\n    )\r\n);","\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#ff1f1f',\r\n        },\r\n        secondary: {\r\n            light: '#0066ff',\r\n            main: '#363b81',\r\n            contrastText: '#fbd743',\r\n        }\r\n    },\r\n});","import Swal from \"sweetalert2\";\r\n\r\n/**\r\n * Funcion encargada de hacer la peticion REST y devolver el arreglo\r\n * de pokemones\r\n * @param {number} offset\r\n * @param {nuumber} limit Valor por defecto es 20\r\n */\r\nexport const getPokemonsFetch = async (offset, limit = 20) => {\r\n  try {\r\n    const urlPokemons = `https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`;\r\n    const respPokemons = await fetch(urlPokemons);\r\n\r\n    const { results, count } = await respPokemons.json();\r\n\r\n    const pokemons = results.map(async (pokemon) => {\r\n      const urlPokemon = pokemon.url;\r\n      const resPokemon = await fetch(urlPokemon);\r\n\r\n      const {\r\n        name,\r\n        height,\r\n        weight,\r\n        types,\r\n        abilities,\r\n        sprites,\r\n      } = await resPokemon.json();\r\n\r\n      return {\r\n        name,\r\n        height,\r\n        weight,\r\n        types,\r\n        abilities,\r\n        sprites,\r\n      };\r\n    });\r\n\r\n    return {\r\n      count,\r\n      pokemons: await Promise.all(pokemons),\r\n    };\r\n  } catch (e) {\r\n    Swal.fire(\"Error\", \"No se pudo obtener la información.\", \"error\");\r\n    return {\r\n      count: 0,\r\n      pokemons: [],\r\n    };\r\n  }\r\n};\r\n","\r\nimport { typesPokedex } from '../types/types';\r\nimport { getPokemonsFetch } from '../helpers/getPokemonsFetch'\r\nimport { startLogin, finishLogin } from './ui';\r\n\r\n/**\r\n * Midleware encargado de obtener los pokemones\r\n * @param {number} offset \r\n */\r\nexport const getPokemons = (offset) => {\r\n    return (dispatch) => {\r\n        dispatch( startLogin() );\r\n        getPokemonsFetch(offset).then(pokemonsResp => {\r\n            const { count, pokemons } = pokemonsResp;\r\n            dispatch( setPokemons( pokemons) );\r\n            dispatch( setCounter( count ) );\r\n            dispatch( finishLogin() );\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Función encargada de establecer los pokemones obtenidos\r\n * @param {array} pokemons \r\n */\r\nexport const setPokemons = ( pokemons ) => ({\r\n    type: typesPokedex.setPokemons,\r\n    payload: {\r\n        pokemons\r\n    }\r\n});\r\n\r\n/**\r\n * Funcion encargada de establecer el numero total de pokemones\r\n * @param {number} count \r\n */\r\nexport const setCounter = ( count ) => ({\r\n    type: typesPokedex.setCount,\r\n    payload: {\r\n        count\r\n    }\r\n});\r\n\r\n/**\r\n * Estable el pokemon, a desplegar dentro del dialog\r\n * @param {object} pokemon \r\n */\r\nexport const setPoekmonActive = ( pokemon ) => ({\r\n    type: typesPokedex.setActivePokemon,\r\n    payload: {\r\n        pokemon\r\n    }\r\n});\r\n\r\n/**\r\n * Establece que se ha dejado de seleccionar un pokemon\r\n */\r\nexport const setPoekmonDeasactivate = ( ) => ({\r\n    type: typesPokedex.setDesactivatePokemon\r\n});","import { typesPokedex } from \"../types/types\";\r\n\r\n/**\r\n * Establece el valor de login en true, \r\n * para que se muerstre el circular progress\r\n */\r\nexport const startLogin = ( ) => ({\r\n    type: typesPokedex.startLoading\r\n});\r\n\r\n/**\r\n * Establece el valor de login en false, \r\n * para que se oculte\r\n */\r\nexport const finishLogin = ( ) => ({\r\n    type: typesPokedex.finishLoading\r\n});\r\n","import { makeStyles, fade } from '@material-ui/core/styles';\r\n\r\nexport const useStylesAppbar = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 16,\r\n        width: '100%',\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '100%'\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));","import React from \"react\";\r\n\r\n// Material UI\r\nimport { AppBar, InputBase, Toolbar, Typography, Hidden } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\n// useStyles\r\nimport { useStylesAppbar } from \"./useStylesAppbar\";\r\n\r\nexport const AppBarComponent = ({ search, handleInputChange }) => {\r\n  const classes = useStylesAppbar();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <img alt='pokeball' className='pokeball-img' width='40' src='./assets/icons/PokeBallIcon.svg.png'/>\r\n          <Hidden smDown><Typography variant=\"h4\">Pokédex</Typography></Hidden>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Buscar..\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              name=\"search\"\r\n              onChange={handleInputChange}\r\n              value={search}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              autoComplete='off'\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Grid, CardContent, Card, Typography, CardMedia, CardActionArea } from '@material-ui/core';\r\n\r\nexport const PokemonListItem = ({ pokemon, handleOpenPokemon }) => {\r\n    return (\r\n        <>\r\n            <Grid item xs={4} md={3} lg={2} className='animate__animated animate__jackInTheBox animate__fast'>\r\n                <Card>\r\n                    <CardActionArea onClick={() => handleOpenPokemon(pokemon)}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={pokemon.name}\r\n                            src={(pokemon.sprites.front_default) ? pokemon.sprites.front_default : './assets/icons/no_image.png'}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"subtitle1\" component=\"h2\" noWrap style={{ textTransform: 'capitalize' }}> {pokemon.name} </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, Grid, Button, DialogActions, Typography } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setPoekmonDeasactivate } from '../../actions/pokemons';\r\n\r\nexport const PokemonDialog = ({ open, handleClose }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name, height, weight, types, abilities, sprites } = useSelector(state => state.pokemons.pokemonActive)\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setPoekmonDeasactivate());\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Dialog onClose={handleClose} open={open} maxWidth='xs'>\r\n                <DialogTitle onClose={handleClose} style={{ textTransform: 'capitalize' }}> {name} </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid style={{ margin: '0px' }} container spacing={3} alignItems='center' justify='space-evenly'>\r\n\r\n                        <Grid item xs={4} md={5} lg={5}>\r\n                            <img alt={name}\r\n                                style={{ width: '100%' }}\r\n                                className='animate__animated animate__zoomInDown animate__fast'\r\n                                src={(sprites.front_default) ? sprites.front_default : './assets/icons/no_image.png'} />\r\n                        </Grid>\r\n\r\n                        <Grid style={{ margin: '0px' }} item xs={8} md={7} lg={7} sm container direction='column' spacing={2}>\r\n\r\n                            <Grid item container direction='row' spacing={3}>\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" gutterBottom> Altura </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\"> {height} ft </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" gutterBottom> Peso </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\"> {weight} lb </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item container direction='row'>\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" gutterBottom> Habilidades </Typography>\r\n                                    {\r\n                                        abilities.map(({ ability }) => (\r\n                                            <Button color='secondary' key={`${name}-${ability.name}`}>\r\n                                                {`${ability.name} `}\r\n                                            </Button>\r\n                                        ))\r\n                                    }\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item container direction='row'>\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" gutterBottom>\r\n                                        Tipo\r\n                                    </Typography>\r\n                                    {\r\n                                        types.map(({ type }) => (\r\n                                            <Button color='secondary' key={`${name}-${type.name}`}>\r\n                                                {`${type.name} `}\r\n                                            </Button>\r\n                                        ))\r\n                                    }\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\"> Cerrar </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { PokemonListItem } from './PokemonListItem';\r\nimport { PokemonDialog } from './PokemonDialog';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPoekmonActive } from '../../actions/pokemons';\r\n\r\nexport const PokemonList = ({pokemons}) => {\r\n    \r\n    // Dialog open state\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    // Dispatch\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenPokemon = ( pokemon ) => {\r\n        dispatch(setPoekmonActive(pokemon));\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    const handleClose = () => setOpenDialog(false);\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction='row' justify=\"center\" alignItems=\"center\" spacing={3} >\r\n                {\r\n                    pokemons.map(pokemon => (\r\n                        <PokemonListItem key={pokemon.name} pokemon={pokemon} handleOpenPokemon={handleOpenPokemon}/>\r\n                    ))\r\n                }\r\n            </Grid>\r\n            {\r\n                openDialog === true && <PokemonDialog open={openDialog} handleClose={handleClose} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\n\r\nexport const GridLoading = () => {\r\n    return (\r\n        <Grid container direction='row' justify=\"center\" className='loading'>\r\n            <Grid item>\r\n                <CircularProgress color='primary' />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Grid, Typography, IconButton } from '@material-ui/core'\r\n\r\nimport NavigateBeforeRoundedIcon from '@material-ui/icons/NavigateBeforeRounded';\r\nimport SkipPreviousRoundedIcon from '@material-ui/icons/SkipPreviousRounded';\r\nimport NavigateNextRoundedIcon from '@material-ui/icons/NavigateNextRounded';\r\nimport SkipNextRoundedIcon from '@material-ui/icons/SkipNextRounded';\r\n\r\n\r\nexport const Controls = ({ handleDecrement, handleIncrement, counter, limit, loading }) => {\r\n    return (\r\n        <Grid container spacing={3} direction='row' justify=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n                <IconButton color='primary' aria-label=\"decrement\" onClick={() => handleDecrement(200)} disabled={counter - 200 < 0 || loading === true}>\r\n                    <SkipPreviousRoundedIcon />\r\n                </IconButton>\r\n                <IconButton color='primary' aria-label=\"decrement\" onClick={() => handleDecrement(20)} disabled={counter === 0 || loading === true}>\r\n                    <NavigateBeforeRoundedIcon />\r\n                </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant=\"body2\" color=\"primary\">\r\n                    {(counter > 0) ? counter / 20 + 1 : 1} / {Math.trunc(limit / 20) + 1}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <IconButton color='primary' aria-label=\"increment\" onClick={() => handleIncrement(20)} disabled={counter + 20 > limit || loading === true}>\r\n                    <NavigateNextRoundedIcon />\r\n                </IconButton>\r\n                <IconButton color='primary' aria-label=\"increment\" onClick={() => handleIncrement(200)} disabled={counter + 200 > limit || loading === true}>\r\n                    <SkipNextRoundedIcon />\r\n                </IconButton>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// Actiones\r\nimport { getPokemons } from \"../../actions/pokemons\";\r\n// Material UI\r\nimport { Container } from \"@material-ui/core\";\r\n// Componente\r\nimport { AppBarComponent } from \"../../components/AppBar/AppBar\";\r\nimport { PokemonList } from \"../../components/PokemonList/PokemonList\";\r\n// Hooks\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useCounter } from \"../../hooks/useCounter\";\r\nimport { GridLoading } from \"../../components/Loading/GridLoading\";\r\nimport { Controls } from \"../../components/Controls/Controls\";\r\n\r\nexport const HomePage = () => {\r\n    // Store\r\n    const { pokemons, count: limit } = useSelector((state) => state.pokemons);\r\n    const { loading } = useSelector((state) => state.ui);\r\n\r\n    // Dispatch react-redux\r\n    const dispatch = useDispatch();\r\n\r\n    // Custom Hooks\r\n    const { counter, increment, decrement } = useCounter(0);\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        search: \"\",\r\n    });\r\n    const { search } = formValues;\r\n\r\n    // Filtro\r\n    const [pokemonsFilter, setPokemonsFilter] = useState(pokemons);\r\n\r\n    useEffect(() => {\r\n        if (pokemons)\r\n            setPokemonsFilter(\r\n                pokemons.filter((pokemon) =>\r\n                    pokemon.name.toLowerCase().includes(search.trim().toLowerCase())\r\n                )\r\n            );\r\n    }, [search, pokemons]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPokemons(counter));\r\n    }, [counter, dispatch]);\r\n\r\n    const handleIncrement = ( factor ) => {\r\n        increment(factor);\r\n        reset();\r\n    };\r\n\r\n    const handleDecrement = ( factor ) => {\r\n        decrement(factor);\r\n        reset();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBarComponent search={search} handleInputChange={handleInputChange} />\r\n            <div>\r\n                <Container maxWidth=\"md\" className=\"container\">\r\n                    <Controls\r\n                        handleDecrement={handleDecrement}\r\n                        handleIncrement={handleIncrement}\r\n                        counter={counter}\r\n                        limit={limit}\r\n                        loading={loading}\r\n                    />\r\n                    {pokemonsFilter && loading === false && (\r\n                        <PokemonList pokemons={pokemonsFilter} />\r\n                    )}\r\n                    {loading === true && <GridLoading />}\r\n                </Container>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useCounter = ( initialState = 0 ) => {\r\n    \r\n    const [counter, setCounter] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setCounter( initialState );\r\n    }\r\n\r\n    const increment = ( factor ) => {\r\n        setCounter( counter + factor );\r\n    }\r\n\r\n    const decrement = ( factor ) => {\r\n        if( counter - factor >= 0 ) setCounter( counter - factor );\r\n    }\r\n\r\n    return {\r\n        counter,\r\n        increment,\r\n        decrement,\r\n        reset\r\n    };\r\n\r\n}","\r\nimport { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { theme } from './theme';\r\nimport { HomePage } from './pages/Home/HomePage';\r\n\r\nexport const PokedexApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <ThemeProvider theme={theme}>\r\n                <HomePage />\r\n            </ThemeProvider>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PokedexApp } from './PokedexApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <PokedexApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}